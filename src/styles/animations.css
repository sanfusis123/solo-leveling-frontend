/* iOS-style Animations and Haptic Feedback */

/* Haptic-like button press */
@keyframes hapticPress {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(0.96);
  }
  100% {
    transform: scale(1);
  }
}

/* Subtle bounce for success actions */
@keyframes hapticSuccess {
  0% {
    transform: scale(1) rotate(0deg);
  }
  20% {
    transform: scale(1.1) rotate(2deg);
  }
  40% {
    transform: scale(0.95) rotate(-1deg);
  }
  60% {
    transform: scale(1.05) rotate(1deg);
  }
  80% {
    transform: scale(0.98) rotate(0deg);
  }
  100% {
    transform: scale(1) rotate(0deg);
  }
}

/* iOS-style loading dots */
@keyframes loadingDots {
  0% {
    opacity: 0.2;
    transform: scale(0.8);
  }
  20% {
    opacity: 1;
    transform: scale(1);
  }
  100% {
    opacity: 0.2;
    transform: scale(0.8);
  }
}

/* Page transition animation */
@keyframes pageSlideIn {
  from {
    opacity: 0;
    transform: translateX(20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* iOS-style shimmer effect */
@keyframes shimmer {
  to {
    background-position: 200% center;
  }
}

/* Card hover lift */
@keyframes cardLift {
  to {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 
      0 24px 48px rgba(0, 0, 0, 0.3),
      0 0 0 1px rgba(255, 255, 255, 0.1);
  }
}

/* Notification bounce */
@keyframes notificationBounce {
  0%, 100% {
    transform: translateY(0);
  }
  10% {
    transform: translateY(-10px);
  }
  30% {
    transform: translateY(5px);
  }
  50% {
    transform: translateY(-5px);
  }
  70% {
    transform: translateY(2px);
  }
  90% {
    transform: translateY(-1px);
  }
}

/* iOS-style rubber band effect */
@keyframes rubberBand {
  0% {
    transform: scale(1);
  }
  30% {
    transform: scale(1.25, 0.75);
  }
  40% {
    transform: scale(0.75, 1.25);
  }
  50% {
    transform: scale(1.15, 0.85);
  }
  65% {
    transform: scale(0.95, 1.05);
  }
  75% {
    transform: scale(1.05, 0.95);
  }
  100% {
    transform: scale(1);
  }
}

/* Gentle pulse for active elements */
@keyframes gentlePulse {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    transform: scale(0.98);
  }
}

/* iOS-style spinner */
@keyframes iosSpinner {
  to {
    transform: rotate(360deg);
  }
}

/* Ripple effect */
@keyframes ripple {
  to {
    transform: scale(4);
    opacity: 0;
  }
}

/* Utility classes for animations */
.haptic-tap {
  animation: hapticPress 200ms ease-out;
}

.haptic-success {
  animation: hapticSuccess 600ms ease-out;
}

.loading-dots span {
  display: inline-block;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: var(--accent-primary);
  margin: 0 2px;
  animation: loadingDots 1.4s infinite ease-in-out both;
}

.loading-dots span:nth-child(1) {
  animation-delay: -0.32s;
}

.loading-dots span:nth-child(2) {
  animation-delay: -0.16s;
}

.shimmer {
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.2) 20%,
    rgba(255, 255, 255, 0.5) 60%,
    rgba(255, 255, 255, 0)
  );
  background-size: 200% 100%;
  animation: shimmer 2s infinite;
}

.bounce-in {
  animation: notificationBounce 0.8s ease-out;
}

.rubber-band {
  animation: rubberBand 0.8s ease-out;
}

/* Add ripple effect to clickable elements */
.ripple {
  position: relative;
  overflow: hidden;
}

.ripple::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.5);
  transform: translate(-50%, -50%);
  transition: width 0.6s, height 0.6s;
}

.ripple:active::before {
  width: 300px;
  height: 300px;
  opacity: 0;
  transition: width 0.6s, height 0.6s, opacity 0.6s;
}

/* iOS-style spring animation */
@keyframes springIn {
  0% {
    opacity: 0;
    transform: scale(0.5);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

.spring-in {
  animation: springIn 0.6s var(--transition-spring);
}

/* iOS-style fade and slide */
@keyframes fadeSlideIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-slide-in {
  animation: fadeSlideIn 0.5s var(--transition-smooth) backwards;
}

/* Stagger children animations */
.stagger-children > * {
  animation: fadeSlideIn 0.5s var(--transition-smooth) backwards;
}

.stagger-children > *:nth-child(1) { animation-delay: 0.05s; }
.stagger-children > *:nth-child(2) { animation-delay: 0.1s; }
.stagger-children > *:nth-child(3) { animation-delay: 0.15s; }
.stagger-children > *:nth-child(4) { animation-delay: 0.2s; }
.stagger-children > *:nth-child(5) { animation-delay: 0.25s; }
.stagger-children > *:nth-child(6) { animation-delay: 0.3s; }
.stagger-children > *:nth-child(7) { animation-delay: 0.35s; }
.stagger-children > *:nth-child(8) { animation-delay: 0.4s; }

/* iOS-style skeleton loading */
.skeleton-loading {
  position: relative;
  overflow: hidden;
  background: rgba(255, 255, 255, 0.05);
}

.skeleton-loading::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  transform: translateX(-100%);
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.1),
    transparent
  );
  animation: skeleton-wave 1.5s infinite;
}

@keyframes skeleton-wave {
  100% {
    transform: translateX(100%);
  }
}